#include "testDns.h"
#include "../src/protocol/Dns.h"
#include <assert.h>
using namespace std;
using namespace ucsmq;
unsigned char peer0_0[] = { /* Packet 5 */
        0xd7, 0x1c, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x02, 0x63, 0x6e, 0x04,
        0x62, 0x69, 0x6e, 0x67, 0x03, 0x63, 0x6f, 0x6d,
        0x00, 0x00, 0x1c, 0x00, 0x01 };
unsigned char peer1_0[] = { /* Packet 9 */
        0xd7, 0x1c, 0x81, 0x80, 0x00, 0x01, 0x00, 0x02,
        0x00, 0x01, 0x00, 0x00, 0x02, 0x63, 0x6e, 0x04,
        0x62, 0x69, 0x6e, 0x67, 0x03, 0x63, 0x6f, 0x6d,
        0x00, 0x00, 0x1c, 0x00, 0x01, 0xc0, 0x0c, 0x00,
        0x05, 0x00, 0x01, 0x00, 0x00, 0x04, 0xff, 0x00,
        0x24, 0x0b, 0x63, 0x6e, 0x2d, 0x62, 0x69, 0x6e,
        0x67, 0x2d, 0x63, 0x6f, 0x6d, 0x02, 0x63, 0x6e,
        0x06, 0x61, 0x2d, 0x30, 0x30, 0x30, 0x31, 0x08,
        0x61, 0x2d, 0x6d, 0x73, 0x65, 0x64, 0x67, 0x65,
        0x03, 0x6e, 0x65, 0x74, 0x00, 0xc0, 0x29, 0x00,
        0x05, 0x00, 0x01, 0x00, 0x00, 0x01, 0x90, 0x00,
        0x10, 0x05, 0x63, 0x68, 0x69, 0x6e, 0x61, 0x07,
        0x62, 0x69, 0x6e, 0x67, 0x31, 0x32, 0x33, 0xc0,
        0x14, 0xc0, 0x5f, 0x00, 0x06, 0x00, 0x01, 0x00,
        0x00, 0x00, 0x26, 0x00, 0x47, 0x06, 0x6e, 0x73,
        0x31, 0x2d, 0x30, 0x34, 0x09, 0x61, 0x7a, 0x75,
        0x72, 0x65, 0x2d, 0x64, 0x6e, 0x73, 0xc0, 0x14,
        0x13, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x64, 0x6e,
        0x73, 0x2d, 0x68, 0x6f, 0x73, 0x74, 0x6d, 0x61,
        0x73, 0x74, 0x65, 0x72, 0x09, 0x6d, 0x69, 0x63,
        0x72, 0x6f, 0x73, 0x6f, 0x66, 0x74, 0xc0, 0x14,
        0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x0e, 0x10,
        0x00, 0x00, 0x01, 0x2c, 0x00, 0x24, 0xea, 0x00,
        0x00, 0x00, 0x01, 0x2c };
void testDns() {
    Dns d;
    ssize_t n = Dns::resolve(d, peer1_0, sizeof(peer1_0));
    assert(n>0);
    cout<<d.toString();
}
